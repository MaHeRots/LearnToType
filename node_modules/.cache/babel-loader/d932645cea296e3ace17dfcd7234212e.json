{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marie-helenerots/Documents/Git/fysp/src/components/pages/exercise.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useRef } from \"react\";\nimport { Input } from \"@chakra-ui/core\";\nimport { keys } from \"../../__mocks__\";\nimport { Button } from \"../../stories/Button\";\nexport const getRandomKey = () => {\n  return keys[Math.floor(Math.random() * keys.length)];\n};\n\nconst SingleInput = ({\n  handleChange,\n  keyValue,\n  placeholder,\n  focusedInput\n}) => {\n  return /*#__PURE__*/_jsxDEV(Input, {\n    ref: focusedInput,\n    name: \"\",\n    size: \"lg\",\n    type: \"text\",\n    placeholder: placeholder,\n    w: \"3rem\",\n    value: keyValue,\n    onChange: handleChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SingleInput;\nexport const Exercise = () => {\n  _s();\n\n  const [keyValues, setKeyValue] = useState([\"\", \"\", \"\", \"\"]);\n  const [targetsKeyValues, setTargetsKeyValue] = useState([getRandomKey(), getRandomKey(), getRandomKey(), getRandomKey()]);\n  const [error, setError] = useState(0);\n  const [valid, setValid] = useState(0);\n  const focusedInput = useRef(null);\n\n  const handleChange = index => onKeyPress => {\n    if (onKeyPress.target.value === targetsKeyValues[index]) {\n      setKeyValue(previousArray => {\n        const newArray = [...previousArray];\n        newArray[index] = onKeyPress.target.value;\n        return newArray;\n      });\n      setValid(valid + 1);\n      targetsKeyValues[index + 1].focus();\n    } else {\n      setError(error + 1);\n    }\n  };\n\n  const reset = useCallback(() => {\n    setTargetsKeyValue([getRandomKey(), getRandomKey(), getRandomKey(), getRandomKey()]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Try this first Exercise: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(SingleInput, {\n      focusedInput: focusedInput,\n      handleChange: handleChange(0),\n      keyValue: keyValues[0],\n      placeholder: targetsKeyValues[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SingleInput, {\n      focusedInput: focusedInput,\n      handleChange: handleChange(1),\n      keyValue: keyValues[1],\n      placeholder: targetsKeyValues[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SingleInput, {\n      focusedInput: focusedInput,\n      handleChange: handleChange(2),\n      keyValue: keyValues[2],\n      placeholder: targetsKeyValues[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SingleInput, {\n      focusedInput: focusedInput,\n      handleChange: handleChange(3),\n      keyValue: keyValues[3],\n      placeholder: targetsKeyValues[3]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [valid, \" valids | \", error, \" errors\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Go to next exercise\",\n      onClick: reset,\n      children: \"Go to next exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}; //change valid, error and key value when reset\n//div aria-label with the text around the inputs and inputs with aria-labels:none\n\n_s(Exercise, \"tL0RWkwkiclH3qBh2It8jleh31I=\");\n\n_c2 = Exercise;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleInput\");\n$RefreshReg$(_c2, \"Exercise\");","map":{"version":3,"sources":["/Users/marie-helenerots/Documents/Git/fysp/src/components/pages/exercise.tsx"],"names":["React","useCallback","useState","useRef","Input","keys","Button","getRandomKey","Math","floor","random","length","SingleInput","handleChange","keyValue","placeholder","focusedInput","Exercise","keyValues","setKeyValue","targetsKeyValues","setTargetsKeyValue","error","setError","valid","setValid","index","onKeyPress","target","value","previousArray","newArray","focus","reset"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useRef } from \"react\";\nimport { Input } from \"@chakra-ui/core\";\nimport { keys } from \"../../__mocks__\";\nimport { Button } from \"../../stories/Button\";\n\nexport const getRandomKey = (): string => { return keys[Math.floor(Math.random() * keys.length)] };\n\nconst SingleInput = ({ handleChange, keyValue, placeholder, focusedInput }: { handleChange: any, keyValue: string, placeholder: string, focusedInput: any }) => {\n\n    return (\n        <Input ref={focusedInput} name=\"\" size=\"lg\" type=\"text\" placeholder={placeholder} w=\"3rem\" value={keyValue} onChange={handleChange} />\n    )\n}\n\nexport const Exercise = () => {\n    const [keyValues, setKeyValue] = useState([\"\", \"\", \"\", \"\"]);\n    const [targetsKeyValues, setTargetsKeyValue] = useState([getRandomKey(), getRandomKey(), getRandomKey(), getRandomKey()]);\n    const [error, setError] = useState(0);\n    const [valid, setValid] = useState(0);\n    const focusedInput = useRef(null);\n    const handleChange = (index: number) => (onKeyPress: any) => {\n        if (onKeyPress.target.value === targetsKeyValues[index]) {\n            setKeyValue((previousArray: string[]): string[] => {\n                const newArray = [...previousArray];\n                newArray[index] = onKeyPress.target.value;\n                return newArray;\n            });\n            setValid(valid + 1);\n            targetsKeyValues[index + 1].focus();\n        } else {\n            setError(error + 1);\n        }\n    }\n    const reset = useCallback(() => { setTargetsKeyValue([getRandomKey(), getRandomKey(), getRandomKey(), getRandomKey()]) }, []);\n    return (\n        <div>\n            Try this first Exercise: <br />\n            <SingleInput focusedInput={focusedInput} handleChange={handleChange(0)} keyValue={keyValues[0]} placeholder={targetsKeyValues[0]} />\n            <SingleInput focusedInput={focusedInput} handleChange={handleChange(1)} keyValue={keyValues[1]} placeholder={targetsKeyValues[1]} />\n            <SingleInput focusedInput={focusedInput} handleChange={handleChange(2)} keyValue={keyValues[2]} placeholder={targetsKeyValues[2]} />\n            <SingleInput focusedInput={focusedInput} handleChange={handleChange(3)} keyValue={keyValues[3]} placeholder={targetsKeyValues[3]} />\n            <div>{valid} valids | {error} errors</div>\n            <Button label={\"Go to next exercise\"} onClick={reset} >Go to next exercise</Button>\n        </div>\n    )\n}\n\n//change valid, error and key value when reset\n//div aria-label with the text around the inputs and inputs with aria-labels:none"]},"metadata":{},"sourceType":"module"}