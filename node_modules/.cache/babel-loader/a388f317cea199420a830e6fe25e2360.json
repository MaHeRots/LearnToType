{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marie-helenerots/Documents/Git/fysp/src/components/pages/exercise.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input } from \"@chakra-ui/core\";\nimport { randomKey } from \"../../__mocks__\";\n\nconst KeyPlaceHolder = () => {\n  _s();\n\n  let key = randomKey;\n  const [value, setValue] = useState(\"\");\n  const [error, setError] = useState(0);\n  const [valid, setValid] = useState(0);\n\n  const handleChange = onKeyPress => {\n    if (onKeyPress.target.value === key) {\n      setValue(onKeyPress.target.value);\n      setValid(valid + 1);\n    } else {\n      setError(error + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      size: \"lg\",\n      type: \"text\",\n      placeholder: key,\n      w: \"3rem\",\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [valid, \" valids | \", error, \" errors\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(KeyPlaceHolder, \"S0vjEblv85UdOhvvPXlrUAGDTjU=\");\n\n_c = KeyPlaceHolder;\nexport const Exercise = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Try this first Exercise: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(KeyPlaceHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KeyPlaceHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KeyPlaceHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KeyPlaceHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KeyPlaceHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KeyPlaceHolder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Exercise;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"KeyPlaceHolder\");\n$RefreshReg$(_c2, \"Exercise\");","map":{"version":3,"sources":["/Users/marie-helenerots/Documents/Git/fysp/src/components/pages/exercise.tsx"],"names":["React","useState","Input","randomKey","KeyPlaceHolder","key","value","setValue","error","setError","valid","setValid","handleChange","onKeyPress","target","Exercise"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,MAAIC,GAAG,GAAGF,SAAV;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMW,YAAY,GAAIC,UAAD,IAAqB;AACtC,QAAIA,UAAU,CAACC,MAAX,CAAkBR,KAAlB,KAA4BD,GAAhC,EAAqC;AACjCE,MAAAA,QAAQ,CAACM,UAAU,CAACC,MAAX,CAAkBR,KAAnB,CAAR;AACAK,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,KAHD,MAGO;AAAED,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAqB;AACjC,GALD;;AAMA,sBACI;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAA6B,MAAA,WAAW,EAAEH,GAA1C;AAA+C,MAAA,CAAC,EAAC,MAAjD;AAAwD,MAAA,KAAK,EAAEC,KAA/D;AAAsE,MAAA,QAAQ,EAAEM;AAAhF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBAAMF,KAAN,gBAAuBF,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAOH,CAlBD;;GAAMJ,c;;KAAAA,c;AAmBN,OAAO,MAAMW,QAAQ,GAAG,MAAM;AAE1B,sBACI;AAAA,yDAC6B;AAAA;AAAA;AAAA;AAAA,YAD7B,eAEI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAbM;MAAMA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Input } from \"@chakra-ui/core\";\nimport { randomKey } from \"../../__mocks__\";\n\n\nconst KeyPlaceHolder = () => {\n    let key = randomKey;\n    const [value, setValue] = useState(\"\");\n    const [error, setError] = useState(0);\n    const [valid, setValid] = useState(0);\n    const handleChange = (onKeyPress: any) => {\n        if (onKeyPress.target.value === key) {\n            setValue(onKeyPress.target.value);\n            setValid(valid + 1)\n        } else { setError(error + 1) }\n    }\n    return (\n        <>\n            <Input size=\"lg\" type=\"text\" placeholder={key} w=\"3rem\" value={value} onChange={handleChange} />\n            <div>{valid} valids | {error} errors</div>\n        </>\n\n    )\n}\nexport const Exercise = () => {\n\n    return (\n        <div>\n            Try this first Exercise: <br />\n            <KeyPlaceHolder />\n            <KeyPlaceHolder />\n            <KeyPlaceHolder />\n            <KeyPlaceHolder />\n            <KeyPlaceHolder />\n            <KeyPlaceHolder />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}