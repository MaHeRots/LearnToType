{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/marie-helenerots/Documents/Git/fysp/src/components/pages/exercise.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Input } from \"@chakra-ui/core\";\nimport { randomKey } from \"../../__mocks__\";\nexport const Exercise = () => {\n  _s();\n\n  let letter = randomKey;\n  const [value, setValue] = useState(\"\");\n  const [error, setError] = useState(0);\n  const [valid, setValid] = useState(0);\n\n  const handleChange = onKeyPress => onKeyPress.target.value === letter ? setValue(onKeyPress.target.value) && setValid(valid + 1) : setError(error + 1);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Try this first Exercise: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      size: \"lg\",\n      type: \"text\",\n      placeholder: letter,\n      w: \"3rem\",\n      value: value,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error, \" errors\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Exercise, \"S0vjEblv85UdOhvvPXlrUAGDTjU=\");\n\n_c = Exercise;\n\nvar _c;\n\n$RefreshReg$(_c, \"Exercise\");","map":{"version":3,"sources":["/Users/marie-helenerots/Documents/Git/fysp/src/components/pages/exercise.tsx"],"names":["React","useState","Input","randomKey","Exercise","letter","value","setValue","error","setError","valid","setValid","handleChange","onKeyPress","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC1B,MAAIC,MAAM,GAAGF,SAAb;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMW,YAAY,GAAIC,UAAD,IAAqBA,UAAU,CAACC,MAAX,CAAkBR,KAAlB,KAA4BD,MAA5B,GAAsCE,QAAQ,CAACM,UAAU,CAACC,MAAX,CAAkBR,KAAnB,CAAR,IAAqCK,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAnF,GAAkGD,QAAQ,CAACD,KAAK,GAAG,CAAT,CAApJ;;AACA,sBACI;AAAA,yDAC6B;AAAA;AAAA;AAAA;AAAA,YAD7B,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,IAAZ;AAAiB,MAAA,IAAI,EAAC,MAAtB;AAA6B,MAAA,WAAW,EAAEH,MAA1C;AAAkD,MAAA,CAAC,EAAC,MAApD;AAA2D,MAAA,KAAK,EAAEC,KAAlE;AAAyE,MAAA,QAAQ,EAAEM;AAAnF;AAAA;AAAA;AAAA;AAAA,YAFJ,eAMI;AAAA,iBAAMJ,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAhBM;;GAAMJ,Q;;KAAAA,Q","sourcesContent":["import React, { useState } from \"react\";\nimport { Input } from \"@chakra-ui/core\";\nimport { randomKey } from \"../../__mocks__\";\nexport const Exercise = () => {\n    let letter = randomKey;\n    const [value, setValue] = useState(\"\");\n    const [error, setError] = useState(0);\n    const [valid, setValid] = useState(0);\n    const handleChange = (onKeyPress: any) => onKeyPress.target.value === letter ? (setValue(onKeyPress.target.value) && setValid(valid + 1)) : setError(error + 1);\n    return (\n        <div>\n            Try this first Exercise: <br />\n            <Input size=\"lg\" type=\"text\" placeholder={letter} w=\"3rem\" value={value} onChange={handleChange} />\n            {/* <Input size=\"lg\" type=\"text\" placeholder={letter} w=\"3rem\" value={value} onChange={handleChange} />\n            <Input size=\"lg\" type=\"text\" placeholder={letter} w=\"3rem\" value={value} onChange={handleChange} />\n            <Input size=\"lg\" type=\"text\" placeholder={letter} w=\"3rem\" value={value} onChange={handleChange} /> */}\n            <div>{error} errors</div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}